<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <groupId>com.genuine</groupId>
    <artifactId>E_commerce</artifactId>
    <version>1.0</version>
    <packaging>war</packaging>

    <properties>
        <!-- *** UPDATED Java Version *** -->
        <maven.compiler.source>17</maven.compiler.source>
        <maven.compiler.target>17</maven.compiler.target>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
    </properties>

    <dependencyManagement>
        <dependencies>
            <dependency>
                <groupId>software.amazon.awssdk</groupId>
                <artifactId>bom</artifactId>
                <version>2.25.31</version> <!-- Use a recent SDK version -->
                <type>pom</type>
                <scope>import</scope>
            </dependency>
        </dependencies>
    </dependencyManagement>

    <dependencies>
        <!-- *** Use javax Servlet API *** -->
        <dependency>
            <groupId>javax.servlet</groupId>
            <artifactId>javax.servlet-api</artifactId>
            <version>4.0.1</version> <!-- This is compatible with Tomcat 9 -->
            <scope>provided</scope>
        </dependency>

        <!-- AWS SDK for DynamoDB -->
        <dependency>
            <groupId>software.amazon.awssdk</groupId>
            <artifactId>dynamodb</artifactId>
        </dependency>

        <!-- Jackson for JSON processing (API Gateway often uses JSON) -->
        <dependency>
            <groupId>com.fasterxml.jackson.core</groupId>
            <artifactId>jackson-databind</artifactId>
            <version>2.15.3</version> <!-- Use a recent version -->
        </dependency>
        <dependency>
            <groupId>com.fasterxml.jackson.core</groupId>
            <artifactId>jackson-core</artifactId>
            <version>2.15.3</version>
        </dependency>
        <dependency>
            <groupId>com.fasterxml.jackson.core</groupId>
            <artifactId>jackson-annotations</artifactId>
            <version>2.15.3</version>
        </dependency>

        <!-- If using Lambda's Java Events library for API Gateway events -->
        <dependency>
            <groupId>com.amazonaws</groupId>
            <artifactId>aws-lambda-java-events</artifactId>
            <version>3.11.5</version> <!-- Use latest -->
        </dependency>
        <dependency>
            <groupId>com.amazonaws</groupId>
            <artifactId>aws-lambda-java-core</artifactId>
            <version>1.2.3</version> <!-- Use latest -->
        </dependency>

        <!-- *** Use javax JSP API *** -->
        <dependency>
            <groupId>javax.servlet.jsp</groupId>
            <artifactId>javax.servlet.jsp-api</artifactId>
            <version>2.3.3</version> <!-- This is compatible with Tomcat 9 -->
            <scope>provided</scope>
        </dependency>

        <!-- AWS SDK for S3 -->
        <dependency>
            <groupId>software.amazon.awssdk</groupId>
            <artifactId>s3</artifactId>
            <!-- Version managed by BOM -->
        </dependency>

        <!-- *** Use OLD JSTL 1.2 Implementation (includes API) *** -->
        <dependency>
            <groupId>javax.servlet</groupId>
            <artifactId>jstl</artifactId>
            <version>1.2</version>
            <!-- Default compile scope - WILL be included in WEB-INF/lib -->
        </dependency>
        <!-- REMOVE the jakarta.servlet.jsp.jstl dependencies -->

        <!-- Mail Dependencies -->
        <dependency>
            <groupId>com.sun.mail</groupId>
            <artifactId>jakarta.mail</artifactId>
            <version>2.0.1</version>
        </dependency>

        <!-- PostgreSQL Driver -->
        <dependency>
            <groupId>org.postgresql</groupId>
            <artifactId>postgresql</artifactId>
            <version>42.7.3</version>
        </dependency>

    </dependencies>

    <build>
        <finalName>E_commerce-1.0</finalName> <!-- This sets the name for the WAR file -->
        <plugins>
            <!-- Compiler Plugin (ensure Java 17) - Declare only ONCE -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <version>3.11.0</version> <!-- Use a recent version -->
                <configuration>
                    <source>${maven.compiler.source}</source> <!-- Uses the property defined above (17) -->
                    <target>${maven.compiler.target}</target> <!-- Uses the property defined above (17) -->
                </configuration>
            </plugin>

            <!-- WAR Plugin (Needed for main web app) - Declare only ONCE -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-war-plugin</artifactId>
                <version>3.4.0</version>
                <configuration>
                    <failOnMissingWebXml>false</failOnMissingWebXml> <!-- If using annotations -->
                </configuration>
            </plugin>

            <!-- Shade Plugin (For Lambda JAR) - Keep this -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-assembly-plugin</artifactId>
                <version>3.6.0</version>
                <configuration>
                    <!-- *** Reference the custom descriptor *** -->
                    <descriptors>
                        <descriptor>src/main/assembly/lambda-jar-with-classes.xml</descriptor>
                    </descriptors>
                    <archive>
                        <!-- Optional Manifest config -->
                    </archive>
                    <!-- Keep classifier or finalName as before -->
                    <appendAssemblyId>false</appendAssemblyId>
                    <finalName>${project.artifactId}-${project.version}-lambda</finalName>
                </configuration>
                <executions>
                    <execution>
                        <id>make-lambda-jar</id> <!-- Changed id slightly -->
                        <phase>package</phase>
                        <goals>
                            <goal>single</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
        </plugins>
    </build>

</project>